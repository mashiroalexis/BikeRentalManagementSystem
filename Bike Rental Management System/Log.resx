<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>