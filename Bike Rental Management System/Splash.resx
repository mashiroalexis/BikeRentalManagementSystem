<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="tmrSplashForm.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>